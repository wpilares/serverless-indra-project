service: serverless-indra-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:654654455562:table/Personajes
        - arn:aws:dynamodb:us-east-1:654654455562:table/Peliculas
        - arn:aws:dynamodb:us-east-1:654654455562:table/Planetas
        - arn:aws:dynamodb:us-east-1:654654455562:table/Especies
        - arn:aws:dynamodb:us-east-1:654654455562:table/NavesEspaciales
        - arn:aws:dynamodb:us-east-1:654654455562:table/Vehiculos

functions:
  getItemDB:
    handler: src/getItemDB.getItemDB
    events:
      - httpApi:
          path: /{model}/{id}
          method: get
  createPeople:
    handler: src/createItemDB.createItemDB
    events:
      - httpApi:
          path: /{model}/{id}
          method: post

resources:
  Resources:
    Personajes:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Personajes
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Peliculas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Peliculas
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Planetas:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Planetas
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Especies:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Especies
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    NavesEspaciales:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: NavesEspaciales
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Vehiculos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Vehiculos
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  documentation:
    version: '1'
    title: 'Serverless Indra Project'
    description: 'This is my API'
    models:
      - handler: src/getItemDB.getItemDB
        type: get
        path: /{model}/{id}
        operationId: getItemDB
        request:
          parameters:
            - name: model
              in: path
              required: true
              schema:
                type: string
                description: El modelo del ítem.
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
                description: El ID del ítem.
        responses:
          '200':
            description: Éxito. Retorna el ítem encontrado.
          '404':
            description: No se encontró el ítem.
      - handler: src/createItemDB.createItemDB
        type: post
        path: /{model}/{id}
        operationId: createItemDB
        request:
          parameters:
            - name: model
              in: path
              required: true
              schema:
                type: string
                description: El modelo del ítem.
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
                description: El ID del ítem.
        responses:
          '201':
            description: Ítem creado exitosamente.
          '400':
            description: Error en la solicitud.
          '500':
            description: Error interno del servidor.

plugins:
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-openapi-documentation


